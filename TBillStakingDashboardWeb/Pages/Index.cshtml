@page
@model TBillStaking.Pages.IndexModel
@{
    Layout = "_Layout";
}

@section scripts {
    <script type="text/javascript" src="js/pageIndex.js?4" charset="utf-8"></script>
}



    <h1>TBill staking dashboard</h1>
    <div class="row">
        &nbsp;
    </div>

    <div class="row">
        <div class="col-lg-6 col-sm-6 col-6">

            <h4>TBill stats</h4><small>(refreshed every hour)</small>
            <div class="row">
                <div class="col-lg-4 col-sm-12">
                    <p>
                        <strong>Total LP Activated</strong>
                        <br />
                        <label id="tvLocked" class="form-label">@Model.TvLocked USD</label>
                    </p>

                </div>
                <div class="col-lg-4 col-sm-12">
                    <p>
                        <strong>Total Activated TBILL</strong><br />
                        <label id="tbillLocked" class="form-label">@Model.TbillLocked TBILL</label>
                    </p>
                </div>
                <div class="col-lg-4 col-sm-12">
                    <p>
                        <strong>Total Activated TFUEL</strong><br />
                        <label id="tfuelLocked" class="form-label">@Model.TfuelLocked TFUEL</label>
                    </p>
                </div>


            </div>
            <div class="row">

                <div class="col-lg-4 col-sm-12">
                    <p>
                        <strong>Total Rewards</strong>
                        <br />
                        <label id="rewards" class="form-label">@Model.Rewards USD</label>
                    </p>

                </div>
                <div class="col-lg-4 col-sm-12">
                    <p>
                        <strong>Number of wallets in LP</strong><br />
                        <label id="tfuelLocked" class="form-label">@Model.lpWalletCount</label>
                    </p>
                </div>
                <div class="col-lg-4 col-sm-12">
                    <p>
                        <strong>LP Token</strong><br />
                        <label id="lpTokenRate" class="form-label"></label>
                    </p>
                </div>
            </div>

        </div>


        <div class="col-lg-6 col-sm-6 col-6">

            <h4>Rebase</h4><small>(live data)</small>
            <div class="row">
                <div class="col-lg-4 col-sm-12">
                    <p>
                        <strong>Current Oracle:</strong>
                        <br />
                        <label id="tbillRate" class="form-label"></label>
                    </p>

                </div>
                <div class="col-lg-4 col-sm-12">
                    <p>
                        <strong>24hr Oracle:</strong>
                        <br />
                        <label id="rebaseRate" class="form-label"></label>
                    </p>

                </div>
                <div class="col-lg-4 col-sm-12">
                    <p>
                        <strong>Rebase Target:</strong><br />
                        <label id="targetRate" class="form-label"></label>
                    </p>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4 col-sm-12">
                    <p>
                        <strong>Positive Rebase Price:</strong><br />
                        <label id="noRebaseRangeTop" class="form-label"></label>
                    </p>
                </div>
                <div class="col-lg-4 col-sm-12">
                    <p>
                        <strong>Negative Rebase Price:</strong><br />
                        <label id="noRebaseRangeBottom" class="form-label"></label>
                    </p>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <h4>LP Stats</h4>
        <div class="col-lg-6 col-sm-6">


            <table id="lpPct" class="table table-sm table-light tableFixHead">
                <thead>
                    <tr>
                        <th>Top no. of wallets</th>
                        <th class="text-end">Hold %</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                    @foreach (var record in Model.LpShare)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => record.Item1)
                            </td>
                            <td class="text-end">
                                @Html.DisplayFor(modelItem => record.Item2)
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <div class="col-lg-6 col-sm-6">
        <table id="lpTbillRange" class="table table-sm table-light tableFixHead">
            <thead>
                <tr>
                    <th>Amount of TBill</th>
                    <th class="text-end">No. of wallets</th>
                </tr>
            </thead>
            <tbody>
                @{
                    @foreach (var record in Model.LpRange)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => record.Item1)
                            </td>
                            <td class="text-end">
                                @Html.DisplayFor(modelItem => record.Item2)
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<style>

    #chart {
        max-width: 650px;
        margin: 5px auto;
    }

    #chartRewards {
        max-width: 650px;
        margin: 5px auto;
    }

    #chartWallets {
        max-width: 650px;
        margin: 5px auto;
    }

    #chartRebase {
        max-width: 650px;
        margin: 5px auto;
    }

    #chartDailyRates {
        max-width: 650px;
        margin: 5px auto;
    }

    #chartDailyLPToken {
        max-width: 650px;
        margin: 5px auto;
    }

    #chartTbillPrice {
        max-width: 650px;
        margin: 5px auto;
    }
</style>

<div class="row">

    <div class="col-lg-4 col-sm-12">
        <div id="chart" class="bg-dark" style="border:0px;"></div>
    </div>
    <div class="col-lg-4 col-sm-12">
        <div id="chartRewards" class="bg-dark" style="border:0px;"></div>
    </div>
    <div class="col-lg-4 col-sm-12">
        <div id="chartWallets" class="bg-dark" style="border:0px;"></div>
    </div>
 </div>
<div class="row">
    <div class="col-lg-4 col-sm-12">
        <div id="chartRebase" class="bg-dark" style="border:0px;"></div>
    </div>
    <div class="col-lg-4 col-sm-12">
        <div id="chartDailyRates" class="bg-dark" style="border:0px;"></div>
    </div>
    <div class="col-lg-4 col-sm-12">
        <div id="chartDailyLPToken" class="bg-dark" style="border:0px;"></div>
    </div>
 </div>
<div class="row">
    <div class="col-lg-4 col-sm-12">
        <div id="chartTbillPrice" class="bg-dark" style="border:0px;"></div>
    </div>
</div>


<div class="row">


    <script>
        window.Promise ||
            document.write(
                '<script src="https://cdn.jsdelivr.net/npm/promise-polyfill@8/dist/polyfill.min.js"><\/script>'
            )
        window.Promise ||
            document.write(
                '<script src="https://cdn.jsdelivr.net/npm/eligrey-classlist-js-polyfill@1.2.20171210/classList.min.js"><\/script>'
            )
        window.Promise ||
            document.write(
                '<script src="https://cdn.jsdelivr.net/npm/findindex_polyfill_mdn"><\/script>'
            )
    </script>


    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>


    <script>


        var datesTvl = [];
        var datesTF = [];
        var datesTB = [];
        var datesRewards = [];

        //$.getJSON("api/getDailyTBillStats", function (data) {
        //    var items = [];
        //    $.each(data, function (key, val) {
        //        var innerArr = [val["Date"], val["TvLocked"]];
        //        dates3.push(innerArr);
        //    });
        //});

        var Httpreq = new XMLHttpRequest(); // a new request
        Httpreq.open("GET", "api/getDailyTBillStats", false);
        Httpreq.send(null);
        Httpreq.responseText;

        var json_obj = JSON.parse(Httpreq.responseText);

        json_obj.forEach((el) => {
            var innerArr = [el["Date"], el["TvLocked"]];
            datesTvl.push(innerArr);
            var innerArr2 = [el["Date"], el["TfuelLocked"]];
            datesTF.push(innerArr2);
            var innerArr3 = [el["Date"], el["TbillLocked"]];
            datesTB.push(innerArr3);
            var innerArr4 = [el["Date"], el["Rewards"]];
            datesRewards.push(innerArr4);
        });


    </script>



    <script>

        var options = {
            series: [{
                name: 'TVL',
                data: datesTvl
            }, {
                name: 'TFuel',
                data: datesTF
            }, {
                name: 'TBill',
                data: datesTB
            }],
            chart: {
                type: 'line',
                stacked: false,
                height: 350,
                zoom: {
                    type: 'x',
                    enabled: true,
                    autoScaleYaxis: true
                },
                toolbar: {
                    autoSelected: 'zoom'
                }
            },
            dataLabels: {
                enabled: false
            },
            markers: {
                size: 0,
            },
            title: {
                text: 'Total Value Locked',
                align: 'left'
            },
            //fill: {
            //    type: 'gradient',
            //    gradient: {
            //        shadeIntensity: 1,
            //        inverseColors: false,
            //        opacityFrom: 0.5,
            //        opacityTo: 0,
            //        stops: [0, 90, 100]
            //    },
            //},
            yaxis: {
                labels: {
                    formatter: function(val) {
                        return (val / 1000000).toFixed(0) + ' M';
                    },
                },
                title: {
                    text: 'Value'
                },
            },
            xaxis: {
                type: 'datetime',
            },
            tooltip: {
                enabled: true,
                shared: true,
                y: {
                    formatter: function(val) {
                        return (val / 1000000).toFixed(2) + ' M'
                    }
                }
            },
            theme: {
                mode: 'dark'
            },
            colors: ['#85bb65', '#e75c10', '#1d2c3b']
        };

        var optionsRewards = {
            series: [{
                name: 'Rewards',
                data: datesRewards
            }],
            chart: {
                type: 'area',
                stacked: false,
                height: 350,
                zoom: {
                    type: 'x',
                    enabled: true,
                    autoScaleYaxis: true
                },
                toolbar: {
                    autoSelected: 'zoom'
                }
            },
            dataLabels: {
                enabled: false
            },
            markers: {
                size: 0,
            },
            title: {
                text: 'Rewards (USD)',
                align: 'left'
            },
            //fill: {
            //    type: 'gradient',
            //    gradient: {
            //        shadeIntensity: 1,
            //        inverseColors: false,
            //        opacityFrom: 0.5,
            //        opacityTo: 0,
            //        stops: [0, 90, 100]
            //    },
            //},
            yaxis: {
                labels: {
                    formatter: function(val) {
                        return (val / 1).toFixed(0);
                    },
                },
                title: {
                    text: 'Value'
                },
            },
            xaxis: {
                type: 'datetime',
            },
            tooltip: {
                enabled: true,
                shared: false,
                y: {
                    formatter: function(val) {
                        return (val / 1).toFixed(0)
                    }
                }
            },
            theme: {
                mode: 'dark'
            }
        };

        var chart = new ApexCharts(document.querySelector("#chart"), options);
        chart.render();

        var chartRewards = new ApexCharts(document.querySelector("#chartRewards"), optionsRewards);
        chartRewards.render();


    </script>
</div>
<div class="row">
    &nbsp;
</div>
<div class="row">
    <style>


    </style>



    <script>


        var datesWallets = [];

        var sourcearray = @Html.Raw(Json.Serialize(Model.WalletList));
        sourcearray.forEach(async (value) => {
            //sum = await sumFunction(sum, value);
            var innerArr = [value["item1"], value["item2"]];
            datesWallets.push(innerArr);
        });

        var datesRebases = [];
        var datesTbillSupply = [];
        var TbillSupplyMin = null;
        var TbillSupplyMax = 0;
        var sourcearrayRebase = @Html.Raw(Json.Serialize(Model.RebaseList));
        sourcearrayRebase.forEach(async (value) => {
            //sum = await sumFunction(sum, value);
            var innerArr = [value["item1"], value["item3"]];
            datesRebases.push(innerArr);
            var innerArrSupply = [value["item1"], value["item2"]];
            datesTbillSupply.push(innerArrSupply);
            if (!TbillSupplyMin || parseFloat(value["item2"]) < parseFloat(TbillSupplyMin)) {
                TbillSupplyMin = parseFloat(value["item2"]);
            }
            if (parseFloat(value["item2"]) > parseFloat(TbillSupplyMax)) {
                TbillSupplyMax = parseFloat(value["item2"]);
            }
        });

    </script>



    <script>

        var optionsWallets = {
            series: [{
                name: 'WalletCount',
                data: datesWallets
            }],
            chart: {
                type: 'area',
                stacked: false,
                height: 350,
                zoom: {
                    type: 'x',
                    enabled: true,
                    autoScaleYaxis: true
                },
                toolbar: {
                    autoSelected: 'zoom'
                }
            },
            dataLabels: {
                enabled: false
            },
            markers: {
                size: 0,
            },
            title: {
                text: 'Number of wallets in LP',
                align: 'left'
            },
            yaxis: {
                labels: {
                    formatter: function(val) {
                        return (val / 1).toFixed(0);
                    },
                },
                title: {
                    text: 'Wallet count'
                },
            },
            xaxis: {
                type: 'datetime',
            },
            tooltip: {
                enabled: true,
                shared: false,
                y: {
                    formatter: function(val) {
                        return (val / 1).toFixed(0)
                    }
                }
            },
            theme: {
                mode: 'dark'
            }
        };

        var optionsRebase = {
            series: [{
                name: 'Rebase %',
                type: 'column',
                data: datesRebases
            }, {
                name: 'TBILL supply',
                type: 'line',
                data: datesTbillSupply
            }],
            chart: {
                height: 350,
                type: 'line',
            },
            stroke: {
                width: [0, 4]
            },
            title: {
                text: 'Rebase / TBILL Supply'
            },
            xaxis: {
                type: 'datetime'
            },
            yaxis: [{
                title: {
                    text: 'Rebase %',
                }, labels: {
                    formatter: function(val) {
                        /*    return (val / 1).toFixed(2);*/
                        return val.toFixed(2);
                    }
                },
                min: -10,
                max: 10

            }, {
                opposite: true,
                title: {
                    text: 'TBILL supply'
                }, labels: {
                    formatter: function(val) {
                        return (val / 1000000).toFixed(2) + ' M';
                    }
                },
                min: TbillSupplyMin * 0.98,
                max: TbillSupplyMax * 1.02
            }],
            plotOptions: {
                bar: {
                    colors: {
                        ranges: [{
                            from: -100,
                            to: 0,
                            color: '#dc3545'
                        }, {
                            from: 0,
                            to: 100,
                            color: '#28a745'
                        }]
                    },
                    columnWidth: '80%',
                }
            },
            theme: {
                mode: 'dark'
            },
            colors: ['#28a745', '#4ECDC4']
        };


        var chartWallets = new ApexCharts(document.querySelector("#chartWallets"), optionsWallets);
        chartWallets.render();

        var chartRebase = new ApexCharts(document.querySelector("#chartRebase"), optionsRebase);
        chartRebase.render();



    </script>
</div>
<div class="row">
    <style>


    </style>

</div>

<div class="row">
    <style>


    </style>

    <div class=col-lg-6 col-sm-12">
    </div>
</div>


